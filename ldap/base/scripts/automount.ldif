# create automount ou
dn: ou=automount,dc=lab,dc=bewley,dc=net
objectClass: top
objectClass: organizationalUnit
ou: automount
description: Container for automount maps

# create automount map entries
dn: ou=auto.master,ou=automount,dc=lab,dc=bewley,dc=net
objectClass: top
objectClass: automountMap
ou: auto.master

dn: cn=/home,ou=auto.master,ou=automount,dc=lab,dc=bewley,dc=net
objectClass: top
objectClass: automount
cn: /home
# automountInformation: ldap:ou=auto.home,ou=automount,dc=lab,dc=bewley,dc=net
# This tells autofs (via SSSD) to look for a map named 'auto.home' for /home paths
automountInformation: auto.home -rw,soft,intr

dn: ou=auto.home,ou=automount,dc=lab,dc=bewley,dc=net
objectClass: top
objectClass: automountMap
ou: auto.home

dn: cn=dale,ou=auto.home,ou=automount,dc=lab,dc=bewley,dc=net
objectClass: top
objectClass: automount
cn: dale
automountInformation: -fstype=nfs4 nfs:/exports/home/dale

dn: cn=jill,ou=auto.home,ou=automount,dc=lab,dc=bewley,dc=net
objectClass: top
objectClass: automount
cn: jill
automountInformation: -fstype=nfs4 nfs:/exports/home/jill

dn: cn=remy,ou=auto.home,ou=automount,dc=lab,dc=bewley,dc=net
objectClass: top
objectClass: automount
cn: remy
automountInformation: -fstype=nfs4 nfs:/exports/home/remy

# Wildcard entry for other users in auto.home (less specific, processed after specific entries)
# The ampersand (&) is replaced by the key (the username)
# untested
dn: cn=*,ou=auto.home,ou=automount,dc=lab,dc=bewley,dc=net
objectClass: top
objectClass: automount
cn: *
automountInformation: nfs:/exports/homes/&